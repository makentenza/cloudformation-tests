AWSTemplateFormatVersion: '2010-09-09'
Description: "Red Hat's Container & PaaS CoP - CASL repository AWS CloudFormation template for OCP"
Parameters:
  VPCCIDR:
    Default: "10.0.0.0/16"
    Description: "CIDR block for the VPC"
    Type: "String"
  PrivateSubnet1CIDR:
    Default: "10.0.1.0/16"
    Description: "CIDR block for the Private Subnet on AZ1"
    Type: "String"
  PrivateSubnet2CIDR:
    Default: "10.0.2.0/16"
    Description: "CIDR block for the Private Subnet on AZ2"
    Type: "String"
  PrivateSubnet3CIDR:
    Default: "10.0.3.0/16"
    Description: "CIDR block for the Private Subnet on AZ3"
    Type: "String"
  #PublicSubnet1CIDR:
  #PublicSubnet2CIDR:
  #PublicSubnet3CIDR:
  #RemoteAccessCIDR:
  #ContainerAccessCIDR:
  #KeyPairName:
  #NumberOfMaster:
  #NumberOfEtcd:
  #NumberOfNodes:
  #NumberOfInfra:
  #NumberOfCNS:
  #MasterInstanceType:
  #EtcdInstanceType:
  #NodesInstanceType:
  #InfraInstanceType:
  #CNSInstanceType:
Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: True
      EnableDnsHostnames: True
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  SubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: True
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  SubnetAZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: True
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  SubnetAZ3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet3CIDR
      MapPublicIpOnLaunch: True
      AvailabilityZone:
        Fn::Select:
          - 2
          - Fn::GetAZs: ""
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  SubnetAZ1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetAZ1
      RouteTableId: !Ref RouteTable
  SubnetAZ2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetAZ2
      RouteTableId: !Ref RouteTable
  SubnetAZ3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetAZ3
      RouteTableId: !Ref RouteTable
  mastersg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Master Nodes Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: udp
        FromPort: '8053'
        ToPort: '8053'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '8053'
        ToPort: '8053'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '8443'
        ToPort: '8443'
        CidrIp: 0.0.0.0/0
      - IpProtocol: udp
        FromPort: '53'
        ToPort: '53'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '53'
        ToPort: '53'
        CidrIp: 0.0.0.0/0
      - IpProtocol: udp
        FromPort: '4789'
        ToPort: '4789'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  infrasg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Infrastructure Nodes Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  nodesg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Compute Nodes Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '10250'
        ToPort: '10250'
        CidrIp: 0.0.0.0/0
      - IpProtocol: udp
        FromPort: '4789'
        ToPort: '4789'
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  sshsg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH Server Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  eycdsg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ETCD Nodes Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
Outputs:
  VpcId:
    Value: !Ref VPC
