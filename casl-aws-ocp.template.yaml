AWSTemplateFormatVersion: '2010-09-09'
Description: "Red Hat's Container & PaaS CoP - CASL repository AWS CloudFormation template for OCP"
Parameters:
  VPCCIDR:
    Default: "10.0.0.0/16"
    Description: "CIDR block for the VPC"
    Type: "String"
  PrivateSubnet1CIDR:
    Default: "10.0.1.0/16"
    Description: "CIDR block for the Private Subnet on AZ1"
    Type: "String"
  PrivateSubnet2CIDR:
    Default: "10.0.2.0/16"
    Description: "CIDR block for the Private Subnet on AZ2"
    Type: "String"
  PrivateSubnet3CIDR:
    Default: "10.0.3.0/16"
    Description: "CIDR block for the Private Subnet on AZ3"
    Type: "String"
  Image:
    Description: "EC2 ami to be used"
    Type: "String"
  KeyPairName:
    Description: "SSH Key to asign to the EC2 instances"
    Type: "String"
  MasterInstanceType:
    Default: "m4.xlarge"
    Description: "The instance type to be used"
    Type: "String"
  #PublicSubnet1CIDR:
  #PublicSubnet2CIDR:
  #PublicSubnet3CIDR:
  #RemoteAccessCIDR:
  #ContainerAccessCIDR:
  #KeyPairName:
  #NumberOfMaster:
  #NumberOfEtcd:
  #NumberOfNodes:
  #NumberOfInfra:
  #NumberOfCNS:
  
  #EtcdInstanceType:
  #NodesInstanceType:
  #InfraInstanceType:
  #CNSInstanceType:
Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: True
      EnableDnsHostnames: True
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  SubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: True
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  SubnetAZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: True
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  SubnetAZ3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet3CIDR
      MapPublicIpOnLaunch: True
      AvailabilityZone:
        Fn::Select:
          - 2
          - Fn::GetAZs: ""
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  SubnetAZ1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetAZ1
      RouteTableId: !Ref RouteTable
  SubnetAZ2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetAZ2
      RouteTableId: !Ref RouteTable
  SubnetAZ3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetAZ3
      RouteTableId: !Ref RouteTable
  mastersg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Master Nodes Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: udp
        FromPort: '8053'
        ToPort: '8053'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '8053'
        ToPort: '8053'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '8443'
        ToPort: '8443'
        CidrIp: 0.0.0.0/0
      - IpProtocol: udp
        FromPort: '53'
        ToPort: '53'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '53'
        ToPort: '53'
        CidrIp: 0.0.0.0/0
      - IpProtocol: udp
        FromPort: '4789'
        ToPort: '4789'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  infrasg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Infrastructure Nodes Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  nodesg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Compute Nodes Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '10250'
        ToPort: '10250'
        CidrIp: 0.0.0.0/0
      - IpProtocol: udp
        FromPort: '4789'
        ToPort: '4789'
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  sshsg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH Server Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  etcdsg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ETCD Nodes Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '2379'
        ToPort: '2379'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '2380'
        ToPort: '2380'
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  cnssg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Gluster Nodes Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '24007'
        ToPort: '24007'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '24008'
        ToPort: '24008'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '2222'
        ToPort: '2222'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '49152'
        ToPort: '49664'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '24010'
        ToPort: '24010'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '3260'
        ToPort: '3260'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '111'
        ToPort: '111'
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: 'Name'
        Value: 'casl-cluster-env'
  Master01: 
    Type: "AWS::EC2::Instance"
    Properties: 
      ImageId: !Ref Image
      KeyName: !Ref KeyPairName
      InstanceType: !Ref MasterInstanceType
      SecurityGroups:
        - etcdsg
        - nodesg
        - mastersg
      Tags:
        - Key: 'Name'
          Value: 'master01'
        - Key: 'ocp_role'
          Value: 'master etcd'
        - Key: 'env_id'
          Value: 'casl-cluster-env'
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: "" 
      BlockDeviceMappings: 
        - DeviceName: "/dev/sda1"
          Ebs: 
            VolumeType: "gp2"
            DeleteOnTermination: "true"
            VolumeSize: "50"
        - DeviceName: "/dev/xvdb"
          Ebs: 
            VolumeType: "gp2"
            DeleteOnTermination: "true"
            VolumeSize: "40"
  Master02: 
    Type: "AWS::EC2::Instance"
    Properties: 
      ImageId: !Ref Image
      KeyName: !Ref KeyPairName
      InstanceType: !Ref MasterInstanceType
      SecurityGroups:
        - etcdsg
        - nodesg
        - mastersg
      Tags:
        - Key: 'Name'
          Value: 'master02'
        - Key: 'ocp_role'
          Value: 'master etcd'
        - Key: 'env_id'
          Value: 'casl-cluster-env'
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: "" 
      BlockDeviceMappings: 
        - DeviceName: "/dev/sda1"
          Ebs: 
            VolumeType: "gp2"
            DeleteOnTermination: "true"
            VolumeSize: "50"
        - DeviceName: "/dev/xvdb"
          Ebs: 
            VolumeType: "gp2"
            DeleteOnTermination: "true"
            VolumeSize: "40"
  Master03: 
    Type: "AWS::EC2::Instance"
    Properties: 
      ImageId: !Ref Image
      KeyName: !Ref KeyPairName
      InstanceType: !Ref MasterInstanceType
      SecurityGroups:
        - etcdsg
        - nodesg
        - mastersg
      Tags:
        - Key: 'Name'
          Value: 'master03'
        - Key: 'ocp_role'
          Value: 'master etcd'
        - Key: 'env_id'
          Value: 'casl-cluster-env'
      AvailabilityZone:
        Fn::Select:
          - 2
          - Fn::GetAZs: "" 
      BlockDeviceMappings: 
        - DeviceName: "/dev/sda1"
          Ebs: 
            VolumeType: "gp2"
            DeleteOnTermination: "true"
            VolumeSize: "50"
        - DeviceName: "/dev/xvdb"
          Ebs: 
            VolumeType: "gp2"
            DeleteOnTermination: "true"
            VolumeSize: "40"
Outputs:
  VpcId:
    Value: !Ref VPC
