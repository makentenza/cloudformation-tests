---
- name: Create a new CloudFormation Stack
  hosts: localhost
  tasks:

  - name: Create underlaying Infrastructure
    cloudformation:
      stack_name: "test-mak"
      state: "{{ action }}"
      region: "eu-central-1"
      template: "casl-aws-ocp.template.yaml"
      template_parameters:
        #AvailabilityZones:
        VPCCIDR: "10.20.0.0/16"
        PrivateSubnet1CIDR: "10.20.1.0/24"
        PrivateSubnet2CIDR: "10.20.2.0/24"
        PrivateSubnet3CIDR: "10.20.3.0/24"
        #PublicSubnet1CIDR:
        #PublicSubnet2CIDR:
        #PublicSubnet3CIDR:
        # RemoteAccessCIDR:
        # ContainerAccessCIDR:
        # KeyPairName:
        # NumberOfMaster:
        # NumberOfEtcd:
        # NumberOfNodes:
        # NumberOfInfra:
        # NumberOfCNS:
        # MasterInstanceType:
        # EtcdInstanceType:
        # NodesInstanceType:
        # InfraInstanceType:
        # CNSInstanceType:
#
#
        # Region: "{{ region }}"
        # Route53HostedZone: "{{ public_hosted_zone }}."
        # PublicHostedZone: "{{ public_hosted_zone }}"
        # MasterApiPort: "{{ console_port }}"
        # MasterHealthTarget: "TCP:{{ console_port }}"
        # MasterClusterHostname: "{{ openshift_master_cluster_hostname }}"
        # MasterClusterPublicHostname: "{{ openshift_master_cluster_public_hostname }}"
        # AppWildcardDomain: "*.{{ wildcard_zone }}"
        # VpcCidrBlock: "{{ cidr_block }}"
        # VpcName: "{{ vpc_prefix }}"
        # SubnetCidrBlocks: "{{ subnet_blocks }}"
        # KeyName: "{{ keypair }}"
        # MasterInstanceType: "{{ master_instance_type }}"
        # AmiId: "{{ ami }}"
        # BastionUserData: "{{ lookup('file', 'user_data_bastion.yml') | b64encode }}"
        # MasterDockerVolSize: "{{ docker_storage }}"
        # MasterDockerVolType: gp2
        # MasterEtcdVolSize: "{{ etcd_storage }}"
        # MasterEtcdVolType: gp2
        # MasterUserData: "{{ lookup('file', 'user_data_master.yml') | b64encode }}"
        # InfraInstanceType: "{{ node_instance_type }}"
        # InfraDockerVolSize: "{{ docker_storage }}"
        # InfraDockerVolType: gp2
        # NodeUserData: "{{ lookup('file', 'user_data_node.yml') | b64encode }}"
        # AppNodeInstanceType: "{{ app_instance_type }}"
        # NodeDockerVolSize: "{{ docker_storage }}"
        # NodeDockerVolType: gp2
        # S3BucketName: "{{ s3_bucket_name }}"
        # S3User: "{{ s3_username }}"
      # tags:
